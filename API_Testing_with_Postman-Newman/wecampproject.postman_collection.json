{
	"info": {
		"_postman_id": "c4bb67d1-c453-4e45-ba64-89a36945b949",
		"name": "wecampproject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26249344"
	},
	"item": [
		{
			"name": "Create new Crud",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"name\", \"Nab-\" + parseInt(Math.random().toString(9).substring(2,7)));\r",
							"\r",
							"pm.environment.set(\"email\", parseInt(Math.random().toString(9).substring(2,7)) + \"@gmail.com\");\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.environment.set(\"id\", jsonData._id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"companyName\");\r",
							"});\r",
							"pm.test(\"Check companyName have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.companyName).to.eql(pm.environment.get(\"name\"));\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"});\r",
							"pm.test(\"Check phone have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.phone).to.eql(\"251-123-020202\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"});\r",
							"pm.test(\"Check email have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"location\");\r",
							"});\r",
							"pm.test(\"Check location have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.location).to.eql(\"HCM City\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"link\");\r",
							"});\r",
							"pm.test(\"Check link have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.link).to.eql(\"https://www.facebook.com/NABVietnam\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"description\");\r",
							"});\r",
							"pm.test(\"Check description have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.description).to.eql(\"The NAB Innovation Centre Vietnam (NICV) is owned by National Australia Bank\")\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
							"});\r",
							"pm.test(\"Check id have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get(\"id\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"companyName\": \"{{name}}\",\r\n        \"phone\": \"251-123-020202\",\r\n        \"email\": \"{{email}}\",\r\n        \"location\": \"HCM City\",\r\n        \"link\": \"https://www.facebook.com/NABVietnam\",\r\n        \"description\": \"The NAB Innovation Centre Vietnam (NICV) is owned by National Australia Bank\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new Crud_failed(422)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Crud add failed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Display all Crud",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"companyName\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"location\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"link\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"description\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show a particular Crud by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"_id\");\r",
							"});\r",
							"pm.test(\"Check id have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData._id).to.eql(pm.environment.get(\"id\"));\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"companyName\");\r",
							"});\r",
							"pm.test(\"Check companyName have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.companyName).to.eql(pm.environment.get(\"name\"));\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"});\r",
							"pm.test(\"Check phone have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.phone).to.eql(\"251-123-020202\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"});\r",
							"pm.test(\"Check email have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"location\");\r",
							"});\r",
							"pm.test(\"Check location have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.location).to.eql(\"HCM City\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"link\");\r",
							"});\r",
							"pm.test(\"Check link have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.link).to.eql(\"https://www.facebook.com/NABVietnam\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"description\");\r",
							"});\r",
							"pm.test(\"Check description have value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.description).to.eql(\"The NAB Innovation Centre Vietnam (NICV) is owned by National Australia Bank\")\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{id}}",
					"host": [
						"{{url}}{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show a particular Crud by id_failed(404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"No result found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}123456789012210",
					"host": [
						"{{url}}123456789012210"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Crud by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include( \"Crud updated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Location\" : \"Ha Noi Capital\",\r\n    \"Website/Social Link\" : \"https://nab-vn.apac.positivethinking.tech/contact-us.html\"\r\n    }\r\n   ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{id}}",
					"host": [
						"{{url}}{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Crud by id_failed(422)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Crud update failed.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n    \"Location\" : \"Ha Noi Capital\",\r\n    \"Website/Social Link\" : \"https://nab-vn.apac.positivethinking.tech/contact-us.html\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}123456789012210",
					"host": [
						"{{url}}123456789012210"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Crud by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Crud deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}{{id}}",
					"host": [
						"{{url}}{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Crud by id_failed(404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Crud not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}123456789012210",
					"host": [
						"{{url}}123456789012210"
					]
				}
			},
			"response": []
		}
	]
}